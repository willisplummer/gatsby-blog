{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Bio.tsx","webpack:///./src/assets/profile-pic.jpg","webpack:///./src/components/SEO.tsx","webpack:///./src/utils/helpers.ts"],"names":["Footer","react_default","a","createElement","style","marginTop","rhythm","paddingTop","float","href","target","rel","__webpack_require__","d","__webpack_exports__","pageQuery","BlogIndex","_ref","data","location","siteTitle","get","posts","filter","_ref2","node","fields","langKey","Layout","title","SEO","Bio","map","_ref3","slug","key","fontFamily","fontSize","marginBottom","gatsby_browser_entry","boxShadow","to","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","components_Footer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_profile_pic_jpg__WEBPACK_IMPORTED_MODULE_1__","_assets_profile_pic_jpg__WEBPACK_IMPORTED_MODULE_1___default","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","display","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","module","exports","p","image","_ref$title","description","_ref$slug","_ref$lang","lang","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","siteMetadata","site","metaDescription","metaImage","siteUrl","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","titleTemplate","meta","name","content","property","concat","_public_static_d_3036156164_json__WEBPACK_IMPORTED_MODULE_1__","minutes","cups","Math","round","Array","fill","join"],"mappings":"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","file":"component---src-pages-index-tsx-4b2b7bb5a887e31d3baa.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nconst Footer = (): JSX.Element => (\n  <footer\n    style={{\n      marginTop: rhythm(2.5),\n      paddingTop: rhythm(1),\n    }}\n  >\n    <div style={{ float: 'right' }}>\n      <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n        rss\n      </a>\n    </div>\n    <a\n      href=\"https://github.com/willisplummer\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      github\n    </a>{' '}\n    <a\n      href=\"https://willisplummer.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      website\n    </a>{' '}\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Footer from '../components/Footer';\nimport { formatReadingTime } from '../utils/helpers';\nimport { rhythm } from '../utils/typography';\n\ninterface PostType {\n  node: {\n    fields: {\n      title: string;\n      langKey: string;\n      slug: string;\n    };\n    frontmatter: { date: string; spoiler: string };\n    timeToRead: number;\n  };\n}\n\ninterface PropsType {\n  location: { pathname: string };\n  data: {\n    site: { siteMetadata: { title: string } };\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          fields: {\n            slug: string;\n            langKey: string;\n          };\n          timeToRead: number;\n          frontmatter: {\n            date: string;\n            title: string;\n            spoiler: string;\n          };\n        };\n      };\n    };\n  };\n}\n\nconst BlogIndex = ({ data, location }: PropsType): JSX.Element => {\n  const siteTitle: string = get(data, 'site.siteMetadata.title', '');\n  const posts: PostType[] = get(data, 'allMarkdownRemark.edges').filter(\n    ({ node }: PostType) => node.fields.langKey === 'en',\n  );\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO />\n      <aside>\n        <Bio />\n      </aside>\n      <main>\n        {posts.map(({ node }: PostType) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  fontFamily: 'Montserrat, sans-serif',\n                  fontSize: rhythm(1),\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {` • ${formatReadingTime(node.timeToRead)}`}\n              </small>\n              <p\n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </div>\n          );\n        })}\n      </main>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nconst Bio = (): JSX.Element => (\n  <div\n    style={{\n      display: 'flex',\n      marginBottom: rhythm(2),\n    }}\n  >\n    <img\n      src={profilePic}\n      alt=\"Willis Plummer\"\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        width: rhythm(2),\n        height: rhythm(2),\n        borderRadius: '50%',\n      }}\n    />\n    <p style={{ maxWidth: 310 }}>\n      dedicated, in respect and admiration, to the spirit that lives in the\n      computer\n    </p>\n  </div>\n);\n\nexport default Bio;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-f4c58bb9bb64eda1f38d763610eb15e3.jpg\";","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n      }\n    }\n  }\n`;\n\ninterface PropsType {\n  image?: string;\n  title?: string;\n  description?: string;\n  slug?: string;\n  lang?: string;\n}\n\nconst SEO = ({\n  image,\n  title = '',\n  description,\n  slug = '',\n  lang = 'en',\n}: PropsType): JSX.Element => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { siteMetadata } = data.site;\n      const metaDescription = description || siteMetadata.description;\n      const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n      const url = `${siteMetadata.siteUrl}${slug}`;\n      return (\n        <Helmet\n          htmlAttributes={{ lang }}\n          {...(title\n            ? {\n                titleTemplate: `%s — ${siteMetadata.title}`,\n                title,\n              }\n            : {\n                title: `${siteMetadata.title} — Willis Plummer blog`,\n              })}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:url',\n              content: url,\n            },\n            {\n              property: 'og:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'og:description',\n              content: metaDescription,\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ].concat(\n            metaImage\n              ? [\n                  {\n                    property: 'og:image',\n                    content: metaImage,\n                  },\n                  {\n                    name: 'twitter:image',\n                    content: metaImage,\n                  },\n                ]\n              : [],\n          )}\n        />\n      );\n    }}\n  />\n);\n\nexport default SEO;\n","// eslint-disable-next-line import/prefer-default-export\nexport function formatReadingTime(minutes: number): string {\n  const cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n}\n"],"sourceRoot":""}