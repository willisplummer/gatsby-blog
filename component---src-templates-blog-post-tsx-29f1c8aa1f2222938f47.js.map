{"version":3,"sources":["webpack:///./src/constants/system-font.ts","webpack:///./src/utils/i18n.ts","webpack:///./src/components/Translations.tsx","webpack:///./src/templates/blog-post.tsx","webpack:///./src/components/Bio.tsx","webpack:///./src/assets/profile-pic.jpg","webpack:///./src/components/SEO.tsx","webpack:///./src/utils/helpers.ts","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js"],"names":["systemFont","codeToLanguage","code","en","ru","tr","es","ko","sv","it","pt-br","pl","zh-hant","ja","fr","hu","vi","th","Translations","_ref","translations","lang","languageLink","editUrl","react_default","a","createElement","style","fontSize","border","borderRadius","padding","background","fontFamily","length","map","l","i","Fragment","key","gatsby_browser_entry","to","href","target","rel","BlogPostTemplate","data","_ref$pageContext","pageContext","previous","next","slug","location","post","markdownRemark","siteTitle","get","fields","langKey","frontmatter","langs","filter","sort","b","rawSlug","replace","targetLang","createLanguageLink","enSlug","slice","discussUrl","encodeURIComponent","Layout","title","SEO","description","spoiler","color","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","formatReadingTime","timeToRead","components_Translations","dangerouslySetInnerHTML","__html","html","margin","boxShadow","textDecoration","Bio","flexWrap","justifyContent","listStyle","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_profile_pic_jpg__WEBPACK_IMPORTED_MODULE_1__","_assets_profile_pic_jpg__WEBPACK_IMPORTED_MODULE_1___default","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","src","profilePic","alt","marginRight","width","height","maxWidth","module","exports","p","image","_ref$title","_ref$slug","_ref$lang","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","siteMetadata","site","metaDescription","metaImage","siteUrl","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","meta","name","content","property","concat","_public_static_d_3036156164_json__WEBPACK_IMPORTED_MODULE_1__","minutes","cups","Math","round","Array","fill","join","$export","aFunction","toObject","fails","$sort","test","P","F","undefined","comparefn","call","this","method","arg"],"mappings":"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","file":"component---src-templates-blog-post-tsx-29f1c8aa1f2222938f47.js","sourcesContent":["const systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n\"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n\"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nexport default systemFont;\n","// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\n// Please keep keys lowercase!\nexport const codeToLanguage = (code: string): string => {\n  const languageMap: { [s: string]: string } = {\n    en: 'English',\n    ru: 'Русский',\n    tr: 'Türkçe',\n    es: 'Español',\n    ko: '한국어',\n    sv: 'Svenska',\n    it: 'Italiano',\n    'pt-br': 'Português do Brasil',\n    pl: 'Polski',\n    'zh-hant': '文言',\n    ja: '日本語',\n    fr: 'Français',\n    hu: 'Magyar',\n    vi: 'Tiếng Việt',\n    th: 'ไทย',\n  };\n\n  return languageMap[code];\n};\n\nexport const loadFontsForCode = (code: string): void => {\n  switch (code) {\n    case 'ru':\n    case 'bg':\n    case 'uk':\n    case 'cs':\n    case 'da':\n    case 'de':\n    case 'es':\n    case 'fi':\n    case 'fr':\n    case 'hu':\n    case 'it':\n    case 'nl':\n    case 'no':\n    case 'pl':\n    case 'pt-br':\n    case 'sq':\n    case 'sv':\n    case 'tr':\n    case 'vi':\n    default:\n      break;\n  }\n};\n\ntype ReturnType = (targetLang: string) => string;\nexport const createLanguageLink = (slug: string, lang: string): ReturnType => {\n  const rawSlug = slug.replace(`${lang}/`, '');\n\n  return targetLang =>\n    targetLang === 'en' ? rawSlug : `${targetLang}/${rawSlug}`;\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport systemFont from '../constants/system-font';\nimport { codeToLanguage } from '../utils/i18n';\n\ninterface TranslationsPropsType {\n  translations: string[];\n  lang: string;\n  languageLink(code: string): string;\n  editUrl: string;\n}\n\nconst Translations = ({\n  translations,\n  lang,\n  languageLink,\n  editUrl,\n}: TranslationsPropsType): JSX.Element => (\n  <p\n    style={{\n      fontSize: '0.9em',\n      border: '1px solid var(--hr)',\n      borderRadius: '0.75em',\n      padding: '0.75em',\n      background: 'var(--inlineCode-bg)',\n      // Use system font to avoid loading extra glyphs for language names\n      fontFamily: systemFont,\n    }}\n  >\n    {translations.length > 0 && (\n      <span>\n        <span>Translations by readers: </span>\n        {translations.map((l: string, i: number) => (\n          <React.Fragment key={l}>\n            {l === lang ? (\n              <b>{codeToLanguage(l)}</b>\n            ) : (\n              <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\n            )}\n            {i === translations.length - 1 ? '' : ' • '}\n          </React.Fragment>\n        ))}\n      </span>\n    )}\n    {lang !== 'en' && (\n      <>\n        <br />\n        <br />\n        <Link to={languageLink('en')}>Read</Link>\n        {' the original or '}\n        <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          improve\n        </a>{' '}\n        this translation.\n      </>\n    )}\n  </p>\n);\n\nexport default Translations;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Translations from '../components/Translations';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n// import Signup from '../components/Signup';\nimport systemFont from '../constants/system-font';\nimport { formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n} from '../utils/i18n';\n\nconst GITHUB_USERNAME = 'willisplummer';\nconst GITHUB_REPO_NAME = 'gatsby-blog';\n\ninterface PageDataType {\n  html: string;\n  timeToRead: number;\n  fields: { langKey: string; slug: string };\n  frontmatter: {\n    langs: string[];\n    title: string;\n    date: string;\n    spoiler: string;\n  };\n}\n\ninterface PropsType {\n  data: {\n    markdownRemark: PageDataType;\n  };\n  pageContext: { previous?: PageDataType; next?: PageDataType; slug: string };\n  location: { pathname: string };\n}\n\nconst BlogPostTemplate = ({\n  data,\n  pageContext: { previous, next, slug },\n  location,\n}: PropsType): JSX.Element => {\n  const post = data.markdownRemark;\n  const siteTitle = get(data, 'site.siteMetadata.title');\n  const lang = post.fields.langKey;\n  const translations = (post.frontmatter.langs || []).filter(\n    (l: string) => l !== 'en',\n  );\n  translations.sort((a: string, b: string) =>\n    codeToLanguage(a) < codeToLanguage(b) ? -1 : 1,\n  );\n\n  loadFontsForCode(lang);\n  const languageLink = createLanguageLink(slug, lang);\n  const enSlug = languageLink('en');\n  const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n    1,\n    enSlug.length - 1,\n  )}/index${lang === 'en' ? '' : `.${lang}`}.md`;\n  const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n    `https://willisplummer.com${enSlug}`,\n  )}`;\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        lang={lang}\n        title={post.frontmatter.title}\n        description={post.frontmatter.spoiler}\n        slug={post.fields.slug}\n      />\n      <main>\n        <article>\n          <header>\n            <h1 style={{ color: 'var(--textTitle)' }}>\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: 'block',\n                marginBottom: rhythm(1),\n                marginTop: rhythm(-4 / 5),\n              }}\n            >\n              {post.frontmatter.date}\n              {` • ${formatReadingTime(post.timeToRead)}`}\n            </p>\n            {translations.length > 0 && (\n              <Translations\n                translations={translations}\n                editUrl={editUrl}\n                languageLink={languageLink}\n                lang={lang}\n              />\n            )}\n          </header>\n          <div\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n          <footer>\n            <p>\n              <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                Discuss on Twitter\n              </a>\n              {` • `}\n              <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                Edit on GitHub\n              </a>\n            </p>\n          </footer>\n        </article>\n      </main>\n      <aside>\n        <div\n          style={{\n            margin: '90px 0 40px 0',\n            fontFamily: systemFont,\n          }}\n        >\n          {/* <Signup /> */}\n        </div>\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            marginTop: rhythm(0.25),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'var(--pink)',\n            }}\n            to=\"/\"\n          >\n            {siteTitle}\n          </Link>\n        </h3>\n        <Bio />\n        <nav>\n          <ul\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n              listStyle: 'none',\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </aside>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        langs\n        spoiler\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nconst Bio = (): JSX.Element => (\n  <div\n    style={{\n      display: 'flex',\n      marginBottom: rhythm(2),\n    }}\n  >\n    <img\n      src={profilePic}\n      alt=\"Willis Plummer\"\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        width: rhythm(2),\n        height: rhythm(2),\n        borderRadius: '50%',\n      }}\n    />\n    <p style={{ maxWidth: 310 }}>\n      dedicated, in respect and admiration, to the spirit that lives in the\n      computer\n    </p>\n  </div>\n);\n\nexport default Bio;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-f4c58bb9bb64eda1f38d763610eb15e3.jpg\";","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n      }\n    }\n  }\n`;\n\ninterface PropsType {\n  image?: string;\n  title?: string;\n  description?: string;\n  slug?: string;\n  lang?: string;\n}\n\nconst SEO = ({\n  image,\n  title = '',\n  description,\n  slug = '',\n  lang = 'en',\n}: PropsType): JSX.Element => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { siteMetadata } = data.site;\n      const metaDescription = description || siteMetadata.description;\n      const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n      const url = `${siteMetadata.siteUrl}${slug}`;\n      return (\n        <Helmet\n          htmlAttributes={{ lang }}\n          {...(title\n            ? {\n                titleTemplate: `%s — ${siteMetadata.title}`,\n                title,\n              }\n            : {\n                title: `${siteMetadata.title} — Willis Plummer blog`,\n              })}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:url',\n              content: url,\n            },\n            {\n              property: 'og:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'og:description',\n              content: metaDescription,\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ].concat(\n            metaImage\n              ? [\n                  {\n                    property: 'og:image',\n                    content: metaImage,\n                  },\n                  {\n                    name: 'twitter:image',\n                    content: metaImage,\n                  },\n                ]\n              : [],\n          )}\n        />\n      );\n    }}\n  />\n);\n\nexport default SEO;\n","// eslint-disable-next-line import/prefer-default-export\nexport function formatReadingTime(minutes: number): string {\n  const cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n}\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n"],"sourceRoot":""}