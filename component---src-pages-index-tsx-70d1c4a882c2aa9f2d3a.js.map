{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Bio.tsx","webpack:///./src/assets/profile-pic.jpg","webpack:///./src/components/SEO.tsx","webpack:///./src/utils/helpers.ts"],"names":["Footer","react_default","a","createElement","style","marginTop","rhythm","paddingTop","float","href","target","rel","BlogIndex","render","siteTitle","get","this","posts","filter","_ref","node","fields","langKey","Layout","location","props","title","SEO","Bio","map","_ref2","slug","key","fontFamily","fontSize","marginBottom","gatsby_browser_entry","boxShadow","to","frontmatter","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","spoiler","components_Footer","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_1___default","display","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","module","exports","__webpack_require__","p","meta","image","description","_ref$lang","lang","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","Object","assign","htmlAttributes","titleTemplate","name","content","property","concat","_public_static_d_3036156164_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","minutes","cups","Math","round","Array","fill","join"],"mappings":"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","file":"component---src-pages-index-tsx-70d1c4a882c2aa9f2d3a.js","sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nconst Footer = () => (\n  <footer\n    style={{\n      marginTop: rhythm(2.5),\n      paddingTop: rhythm(1),\n    }}\n  >\n    <div style={{ float: 'right' }}>\n      <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n        rss\n      </a>\n    </div>\n    <a\n      href=\"https://github.com/willisplummer\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      github\n    </a>{' '}\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Footer from '../components/Footer';\nimport { formatReadingTime } from '../utils/helpers';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    );\n    const posts = get(this, 'props.data.allMarkdownRemark.edges').filter(\n      ({ node }) => node.fields.langKey === 'en'\n    );\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  fontFamily: 'Montserrat, sans-serif',\n                  fontSize: rhythm(1),\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {` • ${formatReadingTime(node.timeToRead)}`}\n              </small>\n              <p\n                dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n              />\n            </div>\n          );\n        })}\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Willis Plummer`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 310 }}>\n          Personal blog by{' '}\n          <a href=\"https://github.com/willisplummer\">Willis Plummer</a>.{' '}\n          dedicated, in respect and admiration, to the spirit that lives in the computer\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","module.exports = __webpack_public_path__ + \"static/profile-pic-f4c58bb9bb64eda1f38d763610eb15e3.jpg\";","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n      }\n    }\n  }\n`;\n\ntype PropsType = {\n  meta: any[],\n  image: string,\n  title: string,\n  description: string,\n  slug: string,\n  lang: string,\n}\n\nconst SEO = ({ meta, image, title, description, slug, lang = 'en' }: PropsType): JSX.Element => (\n  <StaticQuery\n    query={query}\n    render={data => {\n      const { siteMetadata } = data.site;\n      const metaDescription = description || siteMetadata.description;\n      const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n      const url = `${siteMetadata.siteUrl}${slug}`;\n      return (\n        <Helmet\n          htmlAttributes={{ lang }}\n          {...(title\n            ? {\n                titleTemplate: `%s — ${siteMetadata.title}`,\n                title,\n              }\n            : {\n                title: `${siteMetadata.title} — Willis Plummer's blog`,\n              })}\n          meta={[\n            {\n              name: 'description',\n              content: metaDescription,\n            },\n            {\n              property: 'og:url',\n              content: url,\n            },\n            {\n              property: 'og:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'og:description',\n              content: metaDescription,\n            },\n            {\n              name: 'twitter:card',\n              content: 'summary',\n            },\n            {\n              name: 'twitter:title',\n              content: title || siteMetadata.title,\n            },\n            {\n              name: 'twitter:description',\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              metaImage\n                ? [\n                    {\n                      property: 'og:image',\n                      content: metaImage,\n                    },\n                    {\n                      name: 'twitter:image',\n                      content: metaImage,\n                    },\n                  ]\n                : []\n            )\n            .concat(meta)}\n        />\n      );\n    }}\n  />\n);\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nexport default SEO;\n","export function formatReadingTime(minutes: number): string {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n}\n"],"sourceRoot":""}